name: CICD Heroku Deploy Pipeline

on:
  push:
    branches: [main]
  pull_request_target:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.17.0

      - name: Install deps
        run: npm ci

      - name: Build Docker image
        run: docker build -t backend .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push image
        run: |
          docker tag backend ${{ secrets.DOCKER_HUB_USERNAME }}/backend:stable
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend:stable


  deploy-to-ec2:
    needs: build-and-push 
    runs-on: ubuntu-latest

    steps:
      - name: Deploy backend
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.SSH_USER }}   # ec2-user, ubuntu, etc.
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail

            echo "ğŸ›«  Actualizando imagen..."
            sudo docker pull registry.example.com/backend:stable

            echo "â›”  Deteniendo contenedor anterior (si existe)..."
            sudo docker rm -f backend 2>/dev/null || true

            echo "ğŸš€  Lanzando contenedor..."
            sudo docker run -d \
              --name backend \
              --restart=always \
              -p 80:3000 \
              registry.example.com/backend:stable

            echo "ğŸ§¹  Limpiando imÃ¡genes antiguas..."
            sudo docker image prune -f

