name: CICD - Build, Push & Deploy

on:
  push:
    branches: [main]
  pull_request_target:
    branches: [main]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/backend:stable
  EC2_USER: ec2-user
  EC2_PORT: 22

jobs:
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# 1) Build & push la imagen a Docker Hub
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  build-and-push:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18.17.0

      - name: Install deps
        run: npm ci

      - name: Build Docker image
        run: docker build -t backend .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push image
        run: |
          docker tag backend $DOCKER_IMAGE
          docker push $DOCKER_IMAGE

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# 2) Despliegue en EC2
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      # â”€â”€ Smoke test opcional â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Smoke-test SSH (opcional)
        continue-on-error: true
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:        ${{ secrets.EC2_HOST }}
          username:    ${{ env.EC2_USER }}
          key:         ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase:  ${{ secrets.SSH_PASSPHRASE }}
          port:        ${{ env.EC2_PORT }}
          debug:       true
          script:      echo "âœ… ConexiÃ³n SSH exitosa"

      # â”€â”€ Despliegue â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Deploy backend
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:        ${{ secrets.EC2_HOST }}
          username:    ${{ env.EC2_USER }}
          key:         ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase:  ${{ secrets.SSH_PASSPHRASE }}
          port:        ${{ env.EC2_PORT }}
          debug:       true
          script_stop: true     # aborta en el 1er error
          allenvs:     true
          script: |
            set -Eeuo pipefail

            echo "ðŸ›«  Actualizando imagen..."
            sudo docker pull $DOCKER_IMAGE

            echo "â›”  Deteniendo contenedor anterior (si existe)..."
            sudo docker rm -f backend 2>/dev/null || true

            echo "ðŸš€  Lanzando contenedor..."
            sudo docker run -d \
              --name backend \
              --restart=always \
              -p 80:8080 \
              $DOCKER_IMAGE

            echo "ðŸ§¹  Limpiando imÃ¡genes antiguas..."
            sudo docker image prune -f
